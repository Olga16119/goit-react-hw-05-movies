{"version":3,"file":"static/js/328.5f8e0b29.chunk.js","mappings":"6OACA,EAAuB,mB,kBC2CvB,EAvCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,8GAECC,EAAAA,EAAAA,GAAUJ,GAFX,OAEZK,EAFY,OAGlBN,EAAQM,EAAKP,MAHK,gDAKlBQ,QAAQC,IAAR,4CALkB,yDAAH,qDAQnBJ,GACD,GAAE,CAACH,KAGF,4BACE,kCACA,eAAIQ,UAAWC,EAAf,SACGX,EAAKY,KAAI,SAAAC,GAAK,OACb,2BACE,gBACEC,IACED,EAAME,aAAN,yCACsCF,EAAME,cAD5C,kEAIFC,IAAKH,EAAMI,KACXC,MAAM,SAER,uBAAIL,EAAMI,QACV,uBAAIJ,EAAMM,cAXHN,EAAMO,GADF,QAkBtB,C,8LCzCKC,EAAO,mCACPC,EAAW,gCAEJC,EAAa,mCAAG,+GAEFC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBD,IAHlB,uBAEjBd,EAFiB,EAEjBA,KAFiB,kBAKlBA,GALkB,gCAOzBC,QAAQC,IAAR,8BAPyB,yDAAH,qDAWbgB,EAAe,mCAAG,WAAMC,GAAN,kGAEJF,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC+BK,IAH3B,wBAEnBnB,EAFmB,EAEnBA,MAGEoB,IACRnB,QAAQC,IAAR,sBANyB,kBAQpBF,GARoB,gCAU3BC,QAAQC,IAAR,uBAV2B,yDAAH,sDAcfmB,EAAiB,mCAAG,WAAM1B,GAAN,kGAENsB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDpB,EADC,oBACkBmB,IAHZ,uBAErBd,EAFqB,EAErBA,KAFqB,kBAKtBA,GALsB,gCAO7BC,QAAQC,IAAR,qCAP6B,yDAAH,sDAWjBH,EAAS,mCAAG,WAAMJ,GAAN,kGAEEsB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDpB,EADC,4BAC0BmB,IAH5B,uBAEbd,EAFa,EAEbA,KAFa,kBAKdA,GALc,gCAOrBC,QAAQC,IAAR,4CAPqB,yDAAH,sDAWToB,EAAY,mCAAG,WAAM3B,GAAN,kGAEDsB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDpB,EADC,4BAC0BmB,IAHzB,uBAEhBd,EAFgB,EAEhBA,KAFgB,kBAKjBA,GALiB,gCAOxBC,QAAQC,IAAR,2CAPwB,yDAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","servises/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__m5y0R\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport { fetchCast } from 'servises/api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const fetchCastById = async () => {\n      try {\n        const data = await fetchCast(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        console.log(`Error fetching actors' informations`, error);\n      }\n    };\n    fetchCastById();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul className={css.cast}>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            <img\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                  : `https://eticketsolutions.com/demo/themes/e-ticket/img/movie.jpg`\n              }\n              alt={actor.name}\n              width=\"200\"\n            />\n            <p>{actor.name}</p>\n            <p>{actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst api_key = `a90ebb64c23761c126aa80b4b044784d`;\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${api_key}`\n    );\n    return data;\n  } catch (error) {\n    console.log(`Error fetching movies`, error);\n  }\n};\n\nexport const onSearchByQuery = async query => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}search/movie?api_key=${api_key}&query=${query}`\n    );\n    if (!data.ok) {\n      console.log(`Request was not ok`);\n    }\n    return data;\n  } catch (error) {\n    console.log(`Error fetching`, error);\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${api_key}`\n    );\n    return data;\n  } catch (error) {\n    console.log(`Error fetching movie details`, error);\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${api_key}`\n    );\n    return data;\n  } catch (error) {\n    console.log(`Error fetching actors' informations`, error);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${api_key}`\n    );\n    return data;\n  } catch (error) {\n    console.log(`Error fetching reviews information`, error);\n  }\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","fetchCastById","fetchCast","data","console","log","className","css","map","actor","src","profile_path","alt","name","width","character","id","api_key","BASE_URL","fetchTrending","axios","onSearchByQuery","query","ok","fetchMovieDetails","fetchReviews"],"sourceRoot":""}