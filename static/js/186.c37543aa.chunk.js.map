{"version":3,"file":"static/js/186.c37543aa.chunk.js","mappings":"uMAEiBA,EAAUC,EAAQ,KAA3BC,QACR,EAAgCD,EAAQ,KAAhCE,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAoClB,UAlCgB,WACd,MAA8BD,EAAS,IAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAbAH,GAAU,WACR,IAAMK,EAAY,mCAAG,+HAEbC,EAFa,6CAE+BH,EAF/B,kFAIMP,EAAMW,IAAID,GAJhB,OAIXE,EAJW,OAKjBN,EAAWM,EAASC,SALH,gDAOjBC,QAAQC,IAAR,uCAPiB,yDAAH,qDAUlBN,GACD,GAAE,CAACF,IACmB,IAAnBF,EAAQW,QACH,mEAGP,4BACE,qCACA,wBACGX,EAAQY,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QAS1B,C,uGCrCD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\n\nconst { default: axios } = require('axios');\nconst { useState, useEffect } = require('react');\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const fetchReviews = async () => {\n      const api_key = `a90ebb64c23761c126aa80b4b044784d`;\n      const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews&api_key=${api_key}`;\n      try {\n        const responce = await axios.get(url);\n        setReviews(responce.results);\n      } catch (error) {\n        console.log(`Error fetching reviews' information`);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n  if (reviews.length === 0) {\n    return <div>No reviews available for this movie.</div>;\n  }\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <h3>Author: {review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["axios","require","default","useState","useEffect","reviews","setReviews","movieId","useParams","fetchReviews","url","get","responce","results","console","log","length","map","review","author","content","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}