{"version":3,"file":"static/js/76.d9368466.chunk.js","mappings":"mPACA,EAA2B,+BAA3B,EAAoE,8BAApE,EAAgH,kCAAhH,EAA+J,iC,kBC0E/J,EAtEqB,WAAO,IAAD,IACzB,GAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAmBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,aAY/B,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEEC,EAAAA,EAAAA,IAAkBV,GAFpB,OAEXW,EAFW,OAGjBZ,EAASY,GAHQ,gDAKjBC,QAAQC,IAAR,qCALiB,yDAAH,qDAQlBJ,GACD,GAAE,CAACT,IACCF,GAIH,iBAAKgB,UAAWC,EAAhB,UACG,KACD,SAAC,KAAD,CAAMC,GAAIZ,EAAiBa,QAASH,UAAWC,EAA/C,sBAGA,wBAAKjB,EAAMoB,SACX,gBACEC,IAAG,yCAAoCrB,EAAMsB,aAC7CC,IAAKvB,EAAMoB,MACXI,MAAM,SAER,eAAGR,UAAWC,EAAd,UACG,IADH,eAEeQ,KAAKC,MAAO1B,EAAM2B,aAAe,GAAM,KAFtD,QAIA,eAAGX,UAAWC,EAAd,wBAA2CjB,EAAM4B,aACjD,eAAGZ,UAAWC,EAAd,UACG,IADH,WAEWjB,EAAM6B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAtC,UAEX,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CACEf,GAAG,OACHF,UAAWC,EACXT,MAAO,CAAEC,KAAMH,GAHjB,qBAQF,yBACE,SAAC,KAAD,CACEY,GAAG,UACHF,UAAWC,EACXT,MAAO,CAAEC,KAAMH,GAHjB,2BASJ,SAAC,EAAA4B,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,aA9CC,qCAmDV,C,8LCxEKC,EAAO,mCACPC,EAAW,gCAEJC,EAAa,mCAAG,+GAEFC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBD,IAHlB,uBAEjBvB,EAFiB,EAEjBA,KAFiB,kBAKlBA,GALkB,gCAOzBC,QAAQC,IAAR,8BAPyB,yDAAH,qDAWbyB,EAAe,mCAAG,WAAMC,GAAN,kGAEJF,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC+BK,IAH3B,wBAEnB5B,EAFmB,EAEnBA,MAGE6B,IACR5B,QAAQC,IAAR,sBANyB,kBAQpBF,GARoB,gCAU3BC,QAAQC,IAAR,uBAV2B,yDAAH,sDAcfH,EAAiB,mCAAG,WAAMV,GAAN,kGAENqC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDnC,EADC,oBACkBkC,IAHZ,uBAErBvB,EAFqB,EAErBA,KAFqB,kBAKtBA,GALsB,gCAO7BC,QAAQC,IAAR,qCAP6B,yDAAH,sDAWjB4B,EAAS,mCAAG,WAAMzC,GAAN,kGAEEqC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDnC,EADC,4BAC0BkC,IAH5B,uBAEbvB,EAFa,EAEbA,KAFa,kBAKdA,GALc,gCAOrBC,QAAQC,IAAR,4CAPqB,yDAAH,sDAWT6B,EAAY,mCAAG,WAAM1C,GAAN,kGAEDqC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDnC,EADC,4BAC0BkC,IAHzB,uBAEhBvB,EAFgB,EAEhBA,KAFgB,kBAKjBA,GALiB,gCAOxBC,QAAQC,IAAR,2CAPwB,yDAAH,qD","sources":["webpack://react-homework-template/./src/Pages/MovieDetails/MovieDetails.module.css?f582","Pages/MovieDetails/MovieDetails.jsx","servises/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backLink\":\"MovieDetails_backLink__+2RHd\",\"details\":\"MovieDetails_details__NEBVF\",\"description\":\"MovieDetails_description__iYc3X\",\"informLink\":\"MovieDetails_informLink__PbHMV\"};","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport css from './MovieDetails.module.css';\nimport { fetchMovieDetails } from 'servises/api';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? `/`);\n  useEffect(() => {\n    const movieDetails = async () => {\n      try {\n        const data = await fetchMovieDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        console.log(`Error fetching movie details`, error);\n      }\n    };\n    movieDetails();\n  }, [movieId]);\n  if (!movie) {\n    return <p>Loading...</p>;\n  }\n  return (\n    <div className={css.details}>\n      {' '}\n      <Link to={backLinkLocation.current} className={css.backLink}>\n        Go Back\n      </Link>\n      <h2>{movie.title}</h2>\n      <img\n        src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n        alt={movie.title}\n        width=\"250\"\n      ></img>\n      <p className={css.description}>\n        {' '}\n        User score: {Math.round((movie.vote_average / 10) * 100)}%\n      </p>\n      <p className={css.description}> Overview: {movie.overview}</p>\n      <p className={css.description}>\n        {' '}\n        Genres: {movie.genres.map(genre => genre.name).join(`, `)}\n      </p>\n      <div>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link\n              to=\"cast\"\n              className={css.informLink}\n              state={{ from: backLinkLocation }}\n            >\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link\n              to=\"reviews\"\n              className={css.informLink}\n              state={{ from: backLinkLocation }}\n            >\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst api_key = `a90ebb64c23761c126aa80b4b044784d`;\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${api_key}`\n    );\n    return data;\n  } catch (error) {\n    console.log(`Error fetching movies`, error);\n  }\n};\n\nexport const onSearchByQuery = async query => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}search/movie?api_key=${api_key}&query=${query}`\n    );\n    if (!data.ok) {\n      console.log(`Request was not ok`);\n    }\n    return data;\n  } catch (error) {\n    console.log(`Error fetching`, error);\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${api_key}`\n    );\n    return data;\n  } catch (error) {\n    console.log(`Error fetching movie details`, error);\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${api_key}`\n    );\n    return data;\n  } catch (error) {\n    console.log(`Error fetching actors' informations`, error);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${api_key}`\n    );\n    return data;\n  } catch (error) {\n    console.log(`Error fetching reviews information`, error);\n  }\n};\n"],"names":["useState","movie","setMovie","movieId","useParams","location","useLocation","backLinkLocation","useRef","state","from","useEffect","movieDetails","fetchMovieDetails","data","console","log","className","css","to","current","title","src","poster_path","alt","width","Math","round","vote_average","overview","genres","map","genre","name","join","Suspense","fallback","api_key","BASE_URL","fetchTrending","axios","onSearchByQuery","query","ok","fetchCast","fetchReviews"],"sourceRoot":""}