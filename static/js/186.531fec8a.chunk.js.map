{"version":3,"file":"static/js/186.531fec8a.chunk.js","mappings":"kOAoCA,UAhCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAXAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,8GAEFC,EAAAA,EAAAA,IAAaJ,GAFX,OAEfK,EAFe,OAGrBN,GAAW,OAAIM,EAAKC,UAHC,gDAKrBC,QAAQC,IAAR,2CALqB,yDAAH,qDAQtBL,GACD,GAAE,CAACH,IACmB,IAAnBF,EAAQW,QACH,mEAGP,4BACE,qCACA,wBACGX,EAAQY,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QAS1B,C,8LCjCKC,EAAO,mCACPC,EAAW,gCAEJC,EAAa,mCAAG,+GAEFC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBD,IAHlB,uBAEjBV,EAFiB,EAEjBA,KAFiB,kBAKlBA,GALkB,gCAOzBE,QAAQC,IAAR,8BAPyB,yDAAH,qDAWbW,EAAe,mCAAG,WAAMC,GAAN,kGAEJF,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC+BK,IAH3B,wBAEnBf,EAFmB,EAEnBA,MAGEgB,IACRd,QAAQC,IAAR,sBANyB,kBAQpBH,GARoB,gCAU3BE,QAAQC,IAAR,uBAV2B,yDAAH,sDAcfc,EAAiB,mCAAG,WAAMtB,GAAN,kGAENkB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDhB,EADC,oBACkBe,IAHZ,uBAErBV,EAFqB,EAErBA,KAFqB,kBAKtBA,GALsB,gCAO7BE,QAAQC,IAAR,qCAP6B,yDAAH,sDAWjBe,EAAS,mCAAG,WAAMvB,GAAN,kGAEEkB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDhB,EADC,4BAC0Be,IAH5B,uBAEbV,EAFa,EAEbA,KAFa,kBAKdA,GALc,gCAOrBE,QAAQC,IAAR,4CAPqB,yDAAH,sDAWTJ,EAAY,mCAAG,WAAMJ,GAAN,kGAEDkB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDhB,EADC,4BAC0Be,IAHzB,uBAEhBV,EAFgB,EAEhBA,KAFgB,kBAKjBA,GALiB,gCAOxBE,QAAQC,IAAR,2CAPwB,yDAAH,qD","sources":["components/Reviews/Reviews.jsx","servises/api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'servises/api';\n\nimport { useState, useEffect } from 'react';\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const fetchReviewsById = async () => {\n      try {\n        const data = await fetchReviews(movieId);\n        setReviews([...data.results]);\n      } catch (error) {\n        console.log(`Error fetching reviews information`, error);\n      }\n    };\n    fetchReviewsById();\n  }, [movieId]);\n  if (reviews.length === 0) {\n    return <div>No reviews available for this movie.</div>;\n  }\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <h3>Author: {review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nconst api_key = `a90ebb64c23761c126aa80b4b044784d`;\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${api_key}`\n    );\n    return data;\n  } catch (error) {\n    console.log(`Error fetching movies`, error);\n  }\n};\n\nexport const onSearchByQuery = async query => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}search/movie?api_key=${api_key}&query=${query}`\n    );\n    if (!data.ok) {\n      console.log(`Request was not ok`);\n    }\n    return data;\n  } catch (error) {\n    console.log(`Error fetching`, error);\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${api_key}`\n    );\n    return data;\n  } catch (error) {\n    console.log(`Error fetching movie details`, error);\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${api_key}`\n    );\n    return data;\n  } catch (error) {\n    console.log(`Error fetching actors' informations`, error);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${api_key}`\n    );\n    return data;\n  } catch (error) {\n    console.log(`Error fetching reviews information`, error);\n  }\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviewsById","fetchReviews","data","results","console","log","length","map","review","author","content","id","api_key","BASE_URL","fetchTrending","axios","onSearchByQuery","query","ok","fetchMovieDetails","fetchCast"],"sourceRoot":""}